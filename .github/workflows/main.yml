name: Deploy Python Lambda

on:
  push:
    branches:
      - '*'

jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python all python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64

      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      - name: Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: fastapi-server/venv
          key: ${{ runner.os }}-venv-${{ hashFiles('fastapi-server/**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate and Install Dependencies into Virtual env
        run: |
          cd fastapi-server
          python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Install all the app dependencies
      - name: Install dependencies
        run: |
          cd fastapi-server
          pip3 install -r requirements.txt

      # Build the app and run tests
      - name: Build and Run Test
        run: |
          export PYTHONPATH=$PWD/fastapi-server
          cd fastapi-server
          . venv/bin/activate && pytest
      

      - name: Create Zipfile archive of Dependencies
        run: |
          cd fastapi-server/venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .

      - name: Add App to Zipfile
        run: |
          cd fastapi-server/app
          zip -g ../../api.zip -r .

      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: fastapi-server/api.zip


  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api

      - name: Upload to S3
        run: aws s3 cp api.zip s3://devgurus-serverless-api-deployment-bucket/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name devgurus-serverless-api --s3-bucket devgurus-serverless-api-deployment-bucket --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
